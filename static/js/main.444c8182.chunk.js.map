{"version":3,"sources":["components/Navbar/Navbar.jsx","components/Spinner/Spinner.jsx","components/ErrorMsg/ErrorMsg.jsx","components/MatrixLine/MatrixLine.jsx","components/Matrix/Matrix.jsx","components/Climatology/Climatology.jsx","App.js","index.js"],"names":["Navbar","props","className","title","to","exact","activeClassName","Spinner","ErrorMsg","style","textAlign","color","position","top","width","height","margin","fontSize","message","MatrixLine","name","dataType","category","value","criteria","Number","slice","yellow","green","Matrix","forecast","error","dayStyle","padding","borderBottom","fontWeight","dataArray","i","validPeriod","day","length","push","date","map","key","field","j","fullName","values","body","Climatology","state","data","labels","datasets","colors","max","mean","urlClimatology","axios","get","this","then","res","setState","newDataArray","datasetLabels","newDataObj","label","borderColor","backgroundColor","lineTension","datasetByLabel","console","log","options","responsive","maintainAspectRatio","display","text","Component","App","matrixForecast","matrixCriteria","urlForecast","urlCriteria","all","spread","status","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.444c8182.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navbar = (props) => {\n\treturn (\n\t\t<nav>\n\t\t\t<div className=\"nav-title\">\n\t\t\t\t<i className=\"fas fa-fire\"></i>\n\t\t\t\t{props.title}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<ul>\n\t\t\t\t\t<NavLink to=\"/mobile-aviation\" exact activeClassName=\"active-nav\">\n\t\t\t\t\t\t<li>Matrix</li>\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t<NavLink to=\"/mobile-aviation/climatology\" exact activeClassName=\"active-nav\">\n\t\t\t\t\t\t<li>Climatology</li>\n\t\t\t\t\t</NavLink>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</nav>\n\t);\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./Spinner.css\";\n\nconst Spinner = () => {\n\treturn (\n\t\t<div className=\"spinner\">\n\t\t\t<div className=\"sk-chase\">\n\t\t\t\t<div className=\"sk-chase-dot\" />\n\t\t\t\t<div className=\"sk-chase-dot\" />\n\t\t\t\t<div className=\"sk-chase-dot\" />\n\t\t\t\t<div className=\"sk-chase-dot\" />\n\t\t\t\t<div className=\"sk-chase-dot\" />\n\t\t\t\t<div className=\"sk-chase-dot\" />\n\t\t\t</div>\n\t\t\t<div className=\"p-3\">Loading...</div>\n\t\t</div>\n\t);\n};\n\nexport default Spinner;\n","import React from \"react\";\n\nconst ErrorMsg = (props) => {\n\tconst style = {\n\t\ttextAlign: \"center\",\n\t\tcolor: \"var(--primary-blue)\",\n\t\tposition: \"absolute\",\n\t\ttop: \"50%\",\n\t\twidth: \"100%\",\n\t\theight: \"40%\",\n\t\tmargin: \"-25% 0 0 0\",\n\t\tfontSize: \"1.3rem\",\n\t};\n\n\treturn (\n\t\t<div style={style}>\n\t\t\t<i className=\"fas fa-sad-tear p-2\" style={{ fontSize: \"5rem\" }}></i>\n\t\t\t<p>{props.message}</p>\n\t\t</div>\n\t);\n};\n\nexport default ErrorMsg;\n","import React from \"react\";\nimport \"./MatrixLine.css\";\n\nconst MatrixLine = ({ name, dataType, category, value, criteria }) => {\n\t//console.log(dataType);\n\n\tlet color = \"green\";\n\n\t// check if data is from a dropdown option, then compare category\n\tif (dataType === \"dropdown\") {\n\t\tif (category === 2) {\n\t\t\tcolor = \"red\";\n\t\t} else if (category === 1) {\n\t\t\tcolor = \"yellow\";\n\t\t}\n\t} else {\n\t\t// check if variable is sfc wind to remove directional component\n\t\tif (name === \"Max Surface Wind\") {\n\t\t\tvalue = Number(value.slice(2));\n\t\t}\n\n\t\t// return color for associated class\n\t\tif (value > criteria.yellow) {\n\t\t\tcolor = \"red\";\n\t\t} else if (value > criteria.green) {\n\t\t\tcolor = \"yellow\";\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className={`${color} matrix-line`}>\n\t\t\t<div>{name}</div>\n\t\t\t<div>{value}</div>\n\t\t</div>\n\t);\n};\n\nexport default MatrixLine;\n","import React from \"react\";\nimport Spinner from \"../Spinner/Spinner\";\nimport ErrorMsg from \"../ErrorMsg/ErrorMsg\";\nimport MatrixLine from \"../MatrixLine/MatrixLine\";\n\nconst Matrix = ({ forecast, criteria, error }) => {\n\tif (error === true) {\n\t\treturn <ErrorMsg message=\"Something Went Wrong\" />;\n\t}\n\tif (!forecast) {\n\t\treturn <Spinner />;\n\t}\n\n\tconst dayStyle = {\n\t\tpadding: \"2% 0\",\n\t\ttextAlign: \"center\",\n\t\tborderBottom: \"solid 3px var(--dark-gray)\",\n\t\tfontWeight: \"bold\",\n\t\tcolor: \"var(--dark-gray)\",\n\t};\n\n\t// New Date Array\n\tconst dataArray = [];\n\tfor (let i = 0; i < forecast.validPeriod.day.length; i++) {\n\t\tdataArray.push(forecast.validPeriod.day[i] + \" - \" + forecast.validPeriod.date[i]);\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{dataArray.map((day, i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div key={i}>\n\t\t\t\t\t\t<div style={dayStyle}>{day}</div>\n\t\t\t\t\t\t{forecast.forecast.map((field, j) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<MatrixLine\n\t\t\t\t\t\t\t\t\tkey={j}\n\t\t\t\t\t\t\t\t\tname={field.fullName}\n\t\t\t\t\t\t\t\t\tvalue={field.values[i]}\n\t\t\t\t\t\t\t\t\tdataType={field.dataType}\n\t\t\t\t\t\t\t\t\tcategory={field.category[i]}\n\t\t\t\t\t\t\t\t\tcriteria={criteria.body[j]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nexport default Matrix;\n","import React, { Component } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport \"./Climatology.css\";\n\nclass Climatology extends Component {\n\tstate = {\n\t\tdata: {\n\t\t\tlabels: [],\n\t\t\tdatasets: [],\n\t\t},\n\t};\n\n\tcolors = {\n\t\tmax: \"#E81D11\",\n\t\t\"90th\": \"#FF931F\",\n\t\tmean: \"#333\",\n\t\t\"10th\": \"#6EAF3D\",\n\t};\n\n\turlClimatology = \"https://extendsclass.com/api/json-storage/bin/cbadfce\";\n\n\tcomponentDidMount() {\n\t\taxios.get(this.urlClimatology).then((res) => {\n\t\t\tthis.setState({ data: { labels: res.data.labels } });\n\n\t\t\t// Fill datasets as one array of objects\n\t\t\tconst newDataArray = [];\n\t\t\tfor (let i = 0; i < res.data.datasetLabels.length; i++) {\n\t\t\t\tconst newDataObj = {};\n\t\t\t\tnewDataObj.label = res.data.datasetLabels[i];\n\t\t\t\tnewDataObj.borderColor = this.colors[res.data.datasetLabels[i]];\n\t\t\t\tnewDataObj.backgroundColor = \"rgba(0,0,0,0)\";\n\t\t\t\tnewDataObj.lineTension = 0.3;\n\t\t\t\t// get data array based on datasetLabel\n\t\t\t\tnewDataObj.data = res.data.datasetByLabel[res.data.datasetLabels[i]];\n\t\t\t\tnewDataArray.push(newDataObj);\n\t\t\t}\n\n\t\t\t// setState with new array of chart data\n\t\t\tthis.setState({ data: { labels: res.data.labels, datasets: newDataArray } });\n\t\t\tconsole.log(\"climate request made\");\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"climatology\">\n\t\t\t\t<Line\n\t\t\t\t\toptions={{\n\t\t\t\t\t\tresponsive: true,\n\t\t\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\ttext: \"Density Altitude By Month - KTUS\",\n\t\t\t\t\t\t\tfontSize: 20,\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\tdata={this.state.data}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Climatology;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Matrix from \"./components/Matrix/Matrix\";\nimport Climatology from \"./components/Climatology/Climatology\";\n\nclass App extends Component {\n\tstate = {\n\t\tmatrixForecast: null,\n\t\tmatrixCriteria: null,\n\t\terror: false,\n\t};\n\n\turlForecast = \"https://extendsclass.com/api/json-storage/bin/cfbaeae\";\n\turlCriteria = \"https://extendsclass.com/api/json-storage/bin/cbdbfad\";\n\n\tcomponentDidMount() {\n\t\taxios.all([axios.get(this.urlForecast), axios.get(this.urlCriteria)]).then(\n\t\t\taxios.spread((forecast, criteria) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tmatrixForecast: forecast.data,\n\t\t\t\t\tmatrixCriteria: criteria.data,\n\t\t\t\t});\n\t\t\t\t// check if status on both requests is 200\n\t\t\t\tif (forecast.status !== 200 || criteria.status !== 200) {\n\t\t\t\t\tthis.setState({ error: true });\n\t\t\t\t}\n\t\t\t\tconsole.log(\"forecast request made\");\n\t\t\t})\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div>\n\t\t\t\t\t<Navbar title=\"Fire Wx\" />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/mobile-aviation\" exact>\n\t\t\t\t\t\t\t<Matrix\n\t\t\t\t\t\t\t\tforecast={this.state.matrixForecast}\n\t\t\t\t\t\t\t\tcriteria={this.state.matrixCriteria}\n\t\t\t\t\t\t\t\terror={this.state.error}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/mobile-aviation/climatology\" exact>\n\t\t\t\t\t\t\t<Climatology />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}