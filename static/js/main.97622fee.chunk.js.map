{"version":3,"sources":["components/Navbar/Navbar.jsx","components/Spinner/Spinner.jsx","components/ErrorMsg/ErrorMsg.jsx","components/Criteria/Criteria.jsx","components/MatrixLine/MatrixLine.jsx","components/Matrix/Matrix.jsx","components/Climatology/Climatology.jsx","App.js","index.js"],"names":["Navbar","props","className","title","to","exact","activeClassName","Spinner","ErrorMsg","style","textAlign","color","position","top","width","height","margin","fontSize","message","Criteria","name","criteria","noWx","modWx","majWx","MatrixLine","state","clickCriteria","timeout","this","dataType","category","value","handleClickCriteria","setTimeout","setState","handleReleaseCriteria","clearTimeout","Number","slice","yellow","green","onTouchStart","onTouchEnd","onMouseDown","onMouseUp","Component","Matrix","forecast","error","dayStyle","padding","borderBottom","fontWeight","dataArray","i","validPeriod","day","length","push","date","marginLeft","map","key","field","j","fullName","values","body","Climatology","data","labels","datasets","colors","max","mean","urlClimatology","axios","get","then","res","newDataArray","datasetLabels","newDataObj","label","borderColor","backgroundColor","lineTension","datasetByLabel","options","responsive","maintainAspectRatio","display","text","App","matrixForecast","matrixCriteria","urlForecast","urlCriteria","all","spread","status","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97622fee.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navbar = (props) => {\n\treturn (\n\t\t<nav>\n\t\t\t<div className=\"nav-title\">\n\t\t\t\t<i className=\"fas fa-fire\"></i>\n\t\t\t\t{props.title}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<ul>\n\t\t\t\t\t<NavLink to=\"/mobile-aviation\" exact activeClassName=\"active-nav\">\n\t\t\t\t\t\t<li>Matrix</li>\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t<NavLink to=\"/mobile-aviation/climatology\" exact activeClassName=\"active-nav\">\n\t\t\t\t\t\t<li>Climatology</li>\n\t\t\t\t\t</NavLink>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</nav>\n\t);\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./Spinner.css\";\n\nconst Spinner = () => {\n\treturn (\n\t\t<div className=\"spinner\">\n\t\t\t<div className=\"sk-chase\">\n\t\t\t\t<div className=\"sk-chase-dot\" />\n\t\t\t\t<div className=\"sk-chase-dot\" />\n\t\t\t\t<div className=\"sk-chase-dot\" />\n\t\t\t\t<div className=\"sk-chase-dot\" />\n\t\t\t\t<div className=\"sk-chase-dot\" />\n\t\t\t\t<div className=\"sk-chase-dot\" />\n\t\t\t</div>\n\t\t\t<div className=\"p-3\">Loading...</div>\n\t\t</div>\n\t);\n};\n\nexport default Spinner;\n","import React from \"react\";\n\nconst ErrorMsg = (props) => {\n\tconst style = {\n\t\ttextAlign: \"center\",\n\t\tcolor: \"var(--primary-blue)\",\n\t\tposition: \"absolute\",\n\t\ttop: \"50%\",\n\t\twidth: \"100%\",\n\t\theight: \"40%\",\n\t\tmargin: \"-25% 0 0 0\",\n\t\tfontSize: \"1.3rem\",\n\t};\n\n\treturn (\n\t\t<div style={style}>\n\t\t\t<i className=\"fas fa-sad-tear p-2\" style={{ fontSize: \"5rem\" }}></i>\n\t\t\t<p>{props.message}</p>\n\t\t</div>\n\t);\n};\n\nexport default ErrorMsg;\n","import React from \"react\";\nimport \"./Criteria.css\";\n\nconst Criteria = ({ name, criteria }) => {\n\treturn (\n\t\t<div className=\"criteria-popup\">\n\t\t\t<div className=\"criteria-name\">{name}</div>\n\t\t\t<div className=\"criteria-table\">\n\t\t\t\t<div className=\"green\">{criteria.noWx}</div>\n\t\t\t\t<div className=\"yellow\">{criteria.modWx}</div>\n\t\t\t\t<div className=\"red\">{criteria.majWx}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Criteria;\n","import React, { Component, Fragment } from \"react\";\nimport Criteria from \"../Criteria/Criteria\";\nimport \"./MatrixLine.css\";\n\nclass MatrixLine extends Component {\n\tstate = { clickCriteria: false };\n\n\trender() {\n\t\tlet { name, dataType, category, value, criteria } = this.props;\n\n\t\t// set initial color\n\t\tlet color = \"green\";\n\n\t\t// variable to handle setTimeout/clearTimeout\n\t\tlet timeout;\n\n\t\tconst handleClickCriteria = () => {\n\t\t\ttimeout = setTimeout(() => this.setState({ clickCriteria: true }), 1000);\n\t\t};\n\n\t\tconst handleReleaseCriteria = () => {\n\t\t\tthis.setState({ clickCriteria: false });\n\t\t\tclearTimeout(timeout);\n\t\t};\n\n\t\t// check if data is from a dropdown option, then compare category\n\t\tif (dataType === \"dropdown\") {\n\t\t\tif (category === 2) {\n\t\t\t\tcolor = \"red\";\n\t\t\t} else if (category === 1) {\n\t\t\t\tcolor = \"yellow\";\n\t\t\t}\n\t\t} else {\n\t\t\t// check if variable is sfc wind to remove directional component\n\t\t\tif (name === \"Max Surface Wind\") {\n\t\t\t\tvalue = Number(value.slice(2));\n\t\t\t}\n\n\t\t\t// return color for associated class\n\t\t\tif (value > criteria.yellow) {\n\t\t\t\tcolor = \"red\";\n\t\t\t} else if (value > criteria.green) {\n\t\t\t\tcolor = \"yellow\";\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t{this.state.clickCriteria ? <Criteria name={name} criteria={criteria} /> : null}\n\t\t\t\t<div\n\t\t\t\t\tclassName={`${color} matrix-line`}\n\t\t\t\t\tonTouchStart={handleClickCriteria}\n\t\t\t\t\tonTouchEnd={handleReleaseCriteria}\n\t\t\t\t\tonMouseDown={handleClickCriteria}\n\t\t\t\t\tonMouseUp={handleReleaseCriteria}>\n\t\t\t\t\t<div>{name}</div>\n\t\t\t\t\t<div>{value}</div>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default MatrixLine;\n","import React from \"react\";\nimport Spinner from \"../Spinner/Spinner\";\nimport ErrorMsg from \"../ErrorMsg/ErrorMsg\";\nimport MatrixLine from \"../MatrixLine/MatrixLine\";\n\nconst Matrix = ({ forecast, criteria, error }) => {\n\tif (error === true) {\n\t\treturn <ErrorMsg message=\"Something Went Wrong\" />;\n\t}\n\tif (!forecast) {\n\t\treturn <Spinner />;\n\t}\n\n\tconst dayStyle = {\n\t\tpadding: \"2% 0\",\n\t\ttextAlign: \"center\",\n\t\tborderBottom: \"solid 3px var(--dark-gray)\",\n\t\tfontWeight: \"bold\",\n\t\tcolor: \"var(--dark-gray)\",\n\t};\n\n\t// New Date Array\n\tconst dataArray = [];\n\tfor (let i = 0; i < forecast.validPeriod.day.length; i++) {\n\t\tdataArray.push(forecast.validPeriod.day[i] + \" - \" + forecast.validPeriod.date[i]);\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"criteria-pro-tip\">\n\t\t\t\tClick and hold on forecast field for criteria\n\t\t\t\t<i style={{ marginLeft: \"5px\" }} className=\"fas fa-arrow-circle-down\"></i>\n\t\t\t</div>\n\t\t\t{dataArray.map((day, i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div key={i}>\n\t\t\t\t\t\t<div style={dayStyle}>{day}</div>\n\t\t\t\t\t\t{forecast.forecast.map((field, j) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<MatrixLine\n\t\t\t\t\t\t\t\t\tkey={j}\n\t\t\t\t\t\t\t\t\tname={field.fullName}\n\t\t\t\t\t\t\t\t\tvalue={field.values[i]}\n\t\t\t\t\t\t\t\t\tdataType={field.dataType}\n\t\t\t\t\t\t\t\t\tcategory={field.category[i]}\n\t\t\t\t\t\t\t\t\tcriteria={criteria.body[j]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nexport default Matrix;\n","import React, { Component } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport \"./Climatology.css\";\n\nclass Climatology extends Component {\n\tstate = {\n\t\tdata: {\n\t\t\tlabels: [],\n\t\t\tdatasets: [],\n\t\t},\n\t};\n\n\tcolors = {\n\t\tmax: \"#E81D11\",\n\t\t\"90th\": \"#FF931F\",\n\t\tmean: \"#333\",\n\t\t\"10th\": \"#6EAF3D\",\n\t};\n\n\turlClimatology = \"https://extendsclass.com/api/json-storage/bin/cbadfce\";\n\n\tcomponentDidMount() {\n\t\taxios.get(this.urlClimatology).then((res) => {\n\t\t\tthis.setState({ data: { labels: res.data.labels } });\n\n\t\t\t// Fill datasets as one array of objects\n\t\t\tconst newDataArray = [];\n\t\t\tfor (let i = 0; i < res.data.datasetLabels.length; i++) {\n\t\t\t\tconst newDataObj = {};\n\t\t\t\tnewDataObj.label = res.data.datasetLabels[i];\n\t\t\t\tnewDataObj.borderColor = this.colors[res.data.datasetLabels[i]];\n\t\t\t\tnewDataObj.backgroundColor = \"rgba(0,0,0,0)\";\n\t\t\t\tnewDataObj.lineTension = 0.3;\n\t\t\t\t// get data array based on datasetLabel\n\t\t\t\tnewDataObj.data = res.data.datasetByLabel[res.data.datasetLabels[i]];\n\t\t\t\tnewDataArray.push(newDataObj);\n\t\t\t}\n\n\t\t\t// setState with new array of chart data\n\t\t\tthis.setState({ data: { labels: res.data.labels, datasets: newDataArray } });\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"climatology\">\n\t\t\t\t<Line\n\t\t\t\t\toptions={{\n\t\t\t\t\t\tresponsive: true,\n\t\t\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\ttext: \"Density Altitude By Month - KTUS\",\n\t\t\t\t\t\t\tfontSize: 20,\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\tdata={this.state.data}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Climatology;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Matrix from \"./components/Matrix/Matrix\";\nimport Climatology from \"./components/Climatology/Climatology\";\n\nclass App extends Component {\n\tstate = {\n\t\tmatrixForecast: null,\n\t\tmatrixCriteria: null,\n\t\terror: false,\n\t};\n\n\turlForecast = \"https://extendsclass.com/api/json-storage/bin/cfbaeae\";\n\turlCriteria = \"https://extendsclass.com/api/json-storage/bin/cbdbfad\";\n\n\tcomponentDidMount() {\n\t\taxios.all([axios.get(this.urlForecast), axios.get(this.urlCriteria)]).then(\n\t\t\taxios.spread((forecast, criteria) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tmatrixForecast: forecast.data,\n\t\t\t\t\tmatrixCriteria: criteria.data,\n\t\t\t\t});\n\t\t\t\t// check if status on both requests is 200\n\t\t\t\tif (forecast.status !== 200 || criteria.status !== 200) {\n\t\t\t\t\tthis.setState({ error: true });\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div>\n\t\t\t\t\t<Navbar title=\"Fire Wx\" />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/mobile-aviation\" exact>\n\t\t\t\t\t\t\t<Matrix\n\t\t\t\t\t\t\t\tforecast={this.state.matrixForecast}\n\t\t\t\t\t\t\t\tcriteria={this.state.matrixCriteria}\n\t\t\t\t\t\t\t\terror={this.state.error}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/mobile-aviation/climatology\" exact>\n\t\t\t\t\t\t\t<Climatology />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}